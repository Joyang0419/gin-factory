// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wires

import (
	"aCupOfGin/internal/controllers/userController"
	"aCupOfGin/internal/repos/userRepo"
	"aCupOfGin/internal/services/userService"
	"aCupOfGin/internal/tools/dbManager"
)

// Injectors from wireControllers.go:

func InitUserController(us userService.InterfaceUserService) *userController.ImplementUserController {
	implementUserController := userController.NewUserController(us)
	return implementUserController
}

// Injectors from wireRepos.go:

func InitGORMUserRepo(dm dbManager.InterfaceDBManger) *userRepo.GormUserRepo {
	gormUserRepo := userRepo.NewGormUserRepo(dm)
	return gormUserRepo
}

func InitCSVUserRepo(dm dbManager.InterfaceDBManger) *userRepo.CSVUserRepo {
	csvUserRepo := userRepo.NewCSVUserRepo(dm)
	return csvUserRepo
}

// Injectors from wireServices.go:

func InitUserService(ur userRepo.InterfaceUserRepo) *userService.ImplementUserService {
	implementUserService := userService.NewUserService(ur)
	return implementUserService
}

// Injectors from wireTools.go:

func InitGORMDBManager(Dialector dbManager.DBDialector, DBMaxIdleConns dbManager.DBMaxIdleConns, DBMaxOpenConns dbManager.DBMaxOpenConns, ConnMaxLifeTimeMinutes dbManager.ConnMaxLifeTimeMinutes) *dbManager.GormDBManager {
	gormdbmSetting := dbManager.NewGORMDBMSetting(Dialector, DBMaxIdleConns, DBMaxOpenConns, ConnMaxLifeTimeMinutes)
	gormDBManager := dbManager.NewGormDBManager(gormdbmSetting)
	return gormDBManager
}

func InitCSVDBManager(filename dbManager.FileName) *dbManager.CSVDBManager {
	csvdbmSetting := dbManager.NewCSVDBMSetting(filename)
	csvdbManager := dbManager.NewCSVDBManager(csvdbmSetting)
	return csvdbManager
}
