variables:
  BRANCH_PROJECT_ID: ${CI_COMMIT_REF_NAME}_PROJECT_ID
  BRANCH_GCS_KEY: ${CI_COMMIT_REF_NAME}_GCS_KEY
  BRANCH_GKE_KEY: ${CI_COMMIT_REF_NAME}_GKE_KEY
  BRANCH_GKE_NAME: ${CI_COMMIT_REF_NAME}_GKE_NAME
  BRANCH_GKE_ZONE: ${CI_COMMIT_REF_NAME}_GKE_ZONE
  BRANCH_DB_CONFIG: ${CI_COMMIT_REF_NAME}_HELLO_GIN_API_DB_CONFIG
  BRANCH_DB_PWD: ${CI_COMMIT_REF_NAME}_HELLO_GIN_API_DB_PWD


default:
  image: golang:1.18.4-alpine3.15

stages:
  - build
  - build-image
  - deploy-gke

build:
  stage: build
  script:
    - go mod download && go mod verify
    - CURRENT=$PWD
    - cd /go/pkg/mod/github.com/swaggo/swag* && go build -o $CURRENT/swag cmd/swag/main.go  && cd $CURRENT
    - ./swag init -g cmd/main.go -o api/swag
    - go build -o application ./cmd/main.go
  artifacts:
    paths:
      - application
    expire_in: 1 week

build-and-push-image:
  stage: build-image
  only:
    - dev

  image: google/cloud-sdk:slim
  services:
    - name: docker:19.03.12-dind
      alias: thedockerhost
  variables:
    DOCKER_HOST: tcp://thedockerhost:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - PROJECT_ID=${!BRANCH_PROJECT_ID}
    - GCS_KEY=${!BRANCH_GCS_KEY}
  script:
    - curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
    - cat $GCS_KEY | docker login -u _json_key --password-stdin https://asia.gcr.io
    - docker-compose -f deployments/docker-compose.yml build
    - docker tag hello-gin-api asia.gcr.io/$PROJECT_ID/hello-gin-api:$CI_COMMIT_SHORT_SHA
    - docker push asia.gcr.io/$PROJECT_ID/hello-gin-api:$CI_COMMIT_SHORT_SHA

deploy-to-gke:
  stage: deploy-gke
  tags:
    - "gke"
  only:
    - dev

  image: google/cloud-sdk:slim
  before_script:
    - PROJECT_ID=${!BRANCH_PROJECT_ID}
    - GKE_KEY=${!BRANCH_GKE_KEY}
    - GKE_NAME=${!BRANCH_GKE_NAME}
    - GKE_ZONE=${!BRANCH_GKE_ZONE}
    - DB_CONFIG=${!BRANCH_DB_CONFIG}
    - DB_PWD=${!BRANCH_DB_PWD}
    - apt-get install kubectl
    - gcloud auth activate-service-account --key-file $GKE_KEY
    - gcloud container clusters get-credentials $GKE_NAME --zone $GKE_ZONE --project $PROJECT_ID
    - sed -i "s/PROJECT_ID/$PROJECT_ID/" ./deployments/kustomize/base/deployment.yaml
    - sed -i "s/COMMIT_SHORT_SHA/$CI_COMMIT_SHORT_SHA/" ./deployments/kustomize/base/deployment.yaml
    - cat $DB_CONFIG >> ./deployments/kustomize/overlays/$CI_COMMIT_REF_NAME/.env
    - echo "DB_PWD=PLACE_HOLDER" >> ./deployments/kustomize/overlays/$CI_COMMIT_REF_NAME/.env
    - cat $DB_PWD > ./deployments/kustomize/overlays/$CI_COMMIT_REF_NAME/DB_PWD


  script:
    - kubectl kustomize ./deployments/kustomize/overlays/$CI_COMMIT_REF_NAME
    - kubectl apply --kustomize ./deployments/kustomize/overlays/$CI_COMMIT_REF_NAME
    - sleep 5
    - kubectl get configmap
    - kubectl get secret
    - kubectl get deployments
    - kubectl get pods
    - kubectl get service
  allow_failure: true